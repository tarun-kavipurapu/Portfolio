.contact {
    height: 100%;
    max-width: 1366px;
    margin: auto;
    display: flex;
    align-items: center;
    gap: 50px;
  
  
  
    .textContainer {
      flex: 1;
      display: flex;
      flex-direction: column;
      gap: 40px;
  
    
  
      h1 {
        font-size: 100px;
        line-height: 88px;
  
       
      }
  
      span {
        font-weight: 300;
      }
    }
  
    .formContainer {
      flex: 1;
      position: relative;
      
    
  
  
      .phoneSvg {
        stroke: orange;
        position: absolute;
        margin: auto;
        z-index: -1;
      }
  
      form {
        display: flex;
        flex-direction: column;
        gap: 20px;
  
        input,
        textarea {
          padding: 20px;
          background-color: transparent;
          border: 1px solid white;
          color: white;
          border-radius: 5px;
  
        
        }
  
        button {
          padding: 20px;
          border: none;
          background-color: orange;
          cursor: pointer;
          font-weight: 500;
          
        }
      }
    }
  }

  import { useRef, useState } from "react";
import { motion, useInView } from "framer-motion";
import emailjs from "@emailjs/browser";

interface ContactFormValues {
  name: string;
  email: string;
  message: string;
}

const variants = {
  initial: {
    y: 500,
    opacity: 0,
  },
  animate: {
    y: 0,
    opacity: 1,
    transition: {
      duration: 0.5,
      staggerChildren: 0.1,
    },
  },
};

const Contact: React.FC = () => {
  const ref = useRef<HTMLDivElement>(null);
  const formRef = useRef<HTMLFormElement>(null);
  const [error, setError] = useState<boolean>(false);
  const [success, setSuccess] = useState<boolean>(false);

  const isInView = useInView(ref, { margin: "-100px" });

  const sendEmail = (e: React.FormEvent<HTMLFormElement>) => {
    e.preventDefault();

    if (!formRef.current) return;

    const formData = new FormData(formRef.current);
    const formValues: ContactFormValues = {
      name: formData.get("name") as string,
      email: formData.get("email") as string,
      message: formData.get("message") as string,
    };

    emailjs
      .sendForm(
        "service_94y20xo",
        "template_v10u2oh",
        formRef.current,
        "pX_2hasGmGcuvjXIW"
      )
      .then(
        (result) => {
          setSuccess(true);
        },
        (error) => {
          setError(true);
        }
      );
  };

  return (
    <motion.div
      ref={ref}
      className="h-full flex-col max-w-[1366px] mx-auto flex gap-[50px] items-center text-white"
      variants={variants}
      initial="initial"
      whileInView="animate"
    >
      <motion.div
        className="flex-1 flex flex-col gap-[40px] text-gray-50"
        variants={variants}
      >
        <motion.h1 variants={variants} className="text-8xl leading-[88px]">
          Letâ€™s work together
        </motion.h1>
        <motion.div className="item">
          <h2 className="text-2xl font-bold">Mail</h2>
          <span className="text-lg">hello@react.dev</span>
        </motion.div>
        <motion.div className="item">
          <h2 className="text-2xl font-bold">Address</h2>
          <span className="text-lg">Hello street New York</span>
        </motion.div>
        <motion.div className="item">
          <h2 className="text-2xl font-bold">Phone</h2>
          <span className="text-lg">+1 234 5678</span>
        </motion.div>
      </motion.div>
      <div className=" flex flex-col gap-[20px] relative">
        <form>
          <input type="text" name="name" placeholder="Name" className="input" />
          <input
            type="email"
            name="email"
            placeholder="Email"
            className="input"
          />
          <textarea
            name="message"
            placeholder="Message"
            className="input"
          ></textarea>
          <button
            type="submit"
            className="button-primary"
            onClick={(e: React.FormEvent<HTMLFormElement>) => sendEmail(e)}
          >
            Send
          </button>
        </form>
      </div>
    </motion.div>
  );
};

export default Contact;
